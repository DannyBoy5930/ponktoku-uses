---
import MainLayout from "@/layouts/Layout.astro"
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const allPosts: CollectionEntry<"posts">[] = (
    await getCollection("posts")
  ).sort((a, b) => a.data.updatedAt.valueOf() - b.data.updatedAt.valueOf());

  const uniqueCategories = [
    ...new Set(allPosts.map((entry) => entry.data.category).flat()),
  ];

  return uniqueCategories.map((category) => {
    const categoryArticles = allPosts.filter((post) =>
      post.data.category.includes(category)
    );
    return {
      params: { category },
      props: { posts: categoryArticles },
    };
  });
}

const { category } = Astro.params;

if (!category) throw new Error("Category is required in params");

const { posts } = Astro.props;
---

<MainLayout title="Category">
  <div class="mb-4">
    <h1 class="font-lora text-xl"><a href="/" class="underline underline-offset-4 hover:text-orange-500">Index</a> > {category}</h1>
  </div>

  <div>
    <ul class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      {
        posts.map((post) => {
          const { imageUrl, imageAlt, title, description } = post.data
            return (
              <li class="text-center mb-4">
                <a href={`/posts/${post.slug}`}>
                  <div class="w-full h-80 sm:h-48 overflow-hidden">
                    <Image 
                    class="border border-slate-300 dark:border-zinc-700 rounded-xl object-cover w-full h-full" 
                    src={imageUrl} 
                    width={720} 
                    height={720 / 1.777} 
                    alt={imageAlt} 
                    loading="lazy" 	
                  />
                  </div>
                  <h2 class="mt-3 text-xl font-bold">{title}</h2>
                  <h3 class="opacity-70">{description}</h3>
                </a>
              </li>
            )
        })
      }
    </ul>
  </div>
</MainLayout>

